#!/bin/bash

DEBUG=${DEBUG:-"0"}

[ "${DEBUG}" = "1" ] && set -x

EXPORT_METRICS=${EXPORT_METRICS:-"0"}

export PATH=/usr/local/bin:/usr/sbin:/sbin:${PATH}

# Create files with secure permissions
umask 0077

setup_timezone() {
    if [ -n "$TZ" ]; then
	TZ_FILE="/usr/share/zoneinfo/$TZ"
	if [ -f "$TZ_FILE" ]; then
	    echo "Setting container timezone to: $TZ"
	    ln -snf "$TZ_FILE" /etc/localtime
	else
	    echo "Cannot set timezone \"$TZ\": timezone does not exist."
	fi
    fi
}

terminate() {
    pid=$(/bin/pidof "$1")

    if [ -n "$pid" ]; then
        echo "Terminating $base..."
        if ! kill "$pid" ; then
            echo "Terminating $1 failed!" 1>&2
        fi
    else
        echo "Failure determining PID of $1" 1>&2
    fi
}

stop_export_metrics() {
    terminate prometheus_wireguard_exporter
}



setup_wg0_conf() {
	echo "Initialize wireguard config - /etc/wireguard/wg0.conf"

	. /usr/local/libexec/setup_env

	SUBNET4_IP=$(echo "$SUBNET4" | awk 'BEGIN{FS=OFS="."} NF--').1

	echo -n "* Public key: "
	wg genkey | tee /etc/wireguard/private.key | wg pubkey | tee /etc/wireguard/pub.key
	chmod 0644 /etc/wireguard/pub.key
	SERVER_PRIVATE_KEY=$(cat /etc/wireguard/private.key)
	cat > /etc/wireguard/wg0.conf << EOF
[Interface]
Address = ${SUBNET4_IP}/24
ListenPort = ${SERVER_PORT}
PrivateKey = ${SERVER_PRIVATE_KEY}
PostUp =  iptables -t nat -A POSTROUTING -s $SUBNET4/24 -o $INTERFACE -j MASQUERADE; iptables -A INPUT -p udp -m udp --dport 51820 -j ACCEPT; iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT;
PostDown =  iptables -t nat -D POSTROUTING -s $SUBNET4/24 -o $INTERFACE -j MASQUERADE; iptables -D INPUT -p udp -m udp --dport 51820 -j ACCEPT; iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT;
EOF
}

wireguard_up() {
    for conf in /etc/wireguard/wg*.conf; do
	echo "Start wireguard interface ($conf)"
	wg-quick up "$conf"
    done

    for peer in /etc/wireguard/peer_*; do
	# make sure it's a valid entry
	if [ -e "$peer/pub.key" ]; then
            PEER_PUBLIC_KEY=$(cat "$peer/pub.key")
            CONFIG="$peer/wg0.conf"
            IP=$(awk '/Address/{print $3}' "$CONFIG")
	    echo "* Add peer $(basename "${peer}" | sed -e 's|^peer_||g')"
            wg set wg0 peer "$PEER_PUBLIC_KEY" allowed-ips "$IP"
	fi
    done
}

wireguard_down() {
    for conf in /etc/wireguard/wg*.conf
    do
	echo "Stop wireguard interface ($conf)"
        wg-quick down "$conf"
    done
}

quit () {
    if [ "$EXPORT_METRICS" = "1" ]; then
	echo "Stopping exporting metrics"
	stop_export_metrics
    fi
    echo "Stopping wireguard"
    wireguard_down
    exit 0
}

setup_timezone

echo "Starting setup..."
INTERFACE=${INTERFACE:-eth0}
echo "* Interface is set to ${INTERFACE}"
if [ ! -e /etc/wireguard/wg0.conf ]; then
    setup_wg0_conf
fi

trap quit TERM INT QUIT

wireguard_up
if [ "$EXPORT_METRICS" = "1" ]; then
    /usr/bin/prometheus_wireguard_exporter &
fi

while inotifywait -e modify -e create /etc/wireguard
do
  wireguard_down
  wireguard_up
done & wait $!

# something did go wrong...
exit 1
